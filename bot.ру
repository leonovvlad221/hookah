import logging
import os

from aiohttp import web
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from dotenv import load_dotenv

# Завантаження .env
load_dotenv()
TOKEN = os.getenv("TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
PORT = int(os.getenv("PORT", 8000))

# Ініціалізація бота і диспетчера
bot = Bot(token=TOKEN)
dp = Dispatcher()

# Список столів
TABLES = list(range(1, 46))  # 1-45

# Постійні клієнти
VIP_CLIENTS = [
    "Эдгар Хачатарян", "Эрнест Хачатарян", "Саша Лысенко", "Эмин Бабаев", "Шахин Бабаев",
    "Тахир", "Артур Арутюнян", "Тарен Егондян", "Игорь Бегучев", "Артур Маркосян",
    "Аргишт", "Игорь Буштаков", "Саша Бондаренко", "Славик Гречуха", "Артем Зинченко",
    "Валик Понамарев", "Жека Абросимов", "Артем Булгурский", "Виталик Герасимов",
    "Сергей Кесян", "Георгий Кондрашев", "Максим Отрахов", "Сергей Бондаренко",
    "Оганезов Рем", "Рамиль", "Юра", "Ден Чай", "Рома Явников", "Захар",
    "Габилова Алина", "Андрей Бей"
]

# FSM стани
class Booking(StatesGroup):
    waiting_for_table = State()
    waiting_for_hookahs = State()

@dp.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    await message.answer("Привет! Напиши номер стола (1-45):")
    await state.set_state(Booking.waiting_for_table)

@dp.message(Booking.waiting_for_table)
async def process_table(message: Message, state: FSMContext):
    if not message.text.isdigit() or int(message.text) not in TABLES:
        await message.answer("Неверный номер стола. Введите число от 1 до 45.")
        return
    await state.update_data(table=int(message.text))
    await message.answer("Сколько кальянов вам нужно?")
    await state.set_state(Booking.waiting_for_hookahs)

@dp.message(Booking.waiting_for_hookahs)
async def process_hookahs(message: Message, state: FSMContext):
    if not message.text.isdigit() or int(message.text) <= 0:
        await message.answer("Введите корректное количество кальянов.")
        return
    data = await state.get_data()
    table = data["table"]
    hookahs = int(message.text)
    await message.answer(f"Ваш заказ: Стол #{table}, {hookahs} кальян(ов). Спасибо!")
    await state.clear()

# Створення aiohttp додатку
app = web.Application()

# Підключаємо webhook handler
SimpleRequestHandler(
    dispatcher=dp,
    bot=bot,
).register(app, path="/")

# Підключаємо диспетчер
setup_application(app, dp)

# Запуск сервера
if __name__ == "__main__":
    web.run_app(app, port=PORT)
